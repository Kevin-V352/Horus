[{"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\index.js":"1","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\App.js":"2","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\reportWebVitals.js":"3","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\header.jsx":"4","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\header-material-styles.js":"5","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\search-bar\\search-bar.jsx":"6","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\search-bar\\search-bar-material-styles.js":"7","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\dashboard.jsx":"8","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\actions-creators\\weather.js":"9","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\store\\store.js":"10","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\reducers\\wheater-reducer.js":"11","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\actions-types\\index.js":"12","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\principal-info\\principal-info.jsx":"13","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\principal-info\\principal-info-material-styles.js":"14","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\dashboard-material-styles.js":"15","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\letter-forecast\\letter-forecast.jsx":"16","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\letter-forecast\\letter-forecast-material-styles.js":"17","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\daily-chart\\daily-chart.jsx":"18","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\lateral-menu\\lateral-menu.jsx":"19","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\lateral-menu\\lateral-menu-marterial-styles.js":"20","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\app-material-styles.js":"21"},{"size":692,"mtime":1608320915654,"results":"22","hashOfConfig":"23"},{"size":567,"mtime":1608320729934,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1607391066659,"results":"25","hashOfConfig":"23"},{"size":1477,"mtime":1608274958835,"results":"26","hashOfConfig":"23"},{"size":1246,"mtime":1608276366771,"results":"27","hashOfConfig":"23"},{"size":641,"mtime":1607538890255,"results":"28","hashOfConfig":"23"},{"size":698,"mtime":1607538832331,"results":"29","hashOfConfig":"23"},{"size":1690,"mtime":1608255379508,"results":"30","hashOfConfig":"23"},{"size":623,"mtime":1608269705416,"results":"31","hashOfConfig":"23"},{"size":377,"mtime":1607543698839,"results":"32","hashOfConfig":"23"},{"size":617,"mtime":1607904741263,"results":"33","hashOfConfig":"23"},{"size":269,"mtime":1607894763090,"results":"34","hashOfConfig":"23"},{"size":2632,"mtime":1608232019820,"results":"35","hashOfConfig":"23"},{"size":1098,"mtime":1608274739527,"results":"36","hashOfConfig":"23"},{"size":325,"mtime":1608320826742,"results":"37","hashOfConfig":"23"},{"size":2097,"mtime":1608275708137,"results":"38","hashOfConfig":"23"},{"size":1442,"mtime":1608276234876,"results":"39","hashOfConfig":"23"},{"size":3198,"mtime":1608276811850,"results":"40","hashOfConfig":"23"},{"size":2821,"mtime":1608276514091,"results":"41","hashOfConfig":"23"},{"size":605,"mtime":1608276392291,"results":"42","hashOfConfig":"23"},{"size":335,"mtime":1608320758203,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sipddj",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\index.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\App.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\reportWebVitals.js",[],["92","93"],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\header.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\header-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\search-bar\\search-bar.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\search-bar\\search-bar-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\dashboard.jsx",["94"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getForecast } from '../../../redux/actions-creators/weather';\r\nimport { Box } from '@material-ui/core';\r\n\r\nimport PrincipalInfo from './principal-info/principal-info';\r\nimport LetterForecast from './letter-forecast/letter-forecast';\r\nimport DailyChart from './daily-chart/daily-chart';\r\nimport LateralMenu from './lateral-menu/lateral-menu';\r\n\r\nimport dashboardStyles from './dashboard-material-styles'; \r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector((state) => state);\r\n\r\n    useEffect(() => {\r\n        dispatch(getForecast('40.4167047', '-3.7035825'));\r\n    }, []);\r\n\r\n    const classes = dashboardStyles();\r\n\r\n\r\n    return (\r\n            <Box className={classes.root}>\r\n                <LateralMenu/>\r\n                <PrincipalInfo\r\n                    name={weather.timeZone}\r\n                    currentTemp={Math.round(weather.current.temp)}\r\n                    description={weather.current.weather ? weather.current.weather[0].description : null}\r\n                    humidity={weather.current.humidity}\r\n                    windSpeed={weather.current.wind_speed}\r\n                    visibility={weather.current.visibility}\r\n                    pressure={weather.current.pressure}\r\n                    dewPoint={Math.round(weather.current.dew_point)}\r\n                />\r\n                <LetterForecast weeklyForecast={weather.daily} timeZone={weather.timeZone}/>\r\n                <DailyChart hourlyForecast={weather.hourly} timeZone={weather.timeZone}/>\r\n            </Box>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\actions-creators\\weather.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\store\\store.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\reducers\\wheater-reducer.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\actions-types\\index.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\principal-info\\principal-info.jsx",["95"],"import React from 'react';\r\n\r\n//<--- Redux--->//\r\nimport { useSelector } from 'react-redux';\r\n\r\n//<--- Material--->//\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport PrincipalInfoStyles from './principal-info-material-styles';\r\n\r\nconst PrincipalInfo = ({ name, currentTemp, description, humidity, windSpeed, visibility, pressure, dewPoint }) => {\r\n\r\n    const classes = PrincipalInfoStyles();\r\n\r\n    const changeFormat = (str) => {\r\n        let chars = {\r\n            '/':', ',\r\n            '_': ' '\r\n        };\r\n        return str.replace(/[/_]/g, m => chars[m]);\r\n    };\r\n\r\n    const ChangeDescription = (str) => {\r\n        if(!str) return undefined\r\n        return str.replace(str[0], str[0].toUpperCase());\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent className={classes.cardContent}>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    {changeFormat(name)}\r\n                </Typography>\r\n                <Typography className={classes.currentTemp} variant=\"h5\" component=\"h2\">\r\n                    {currentTemp} °C\r\n                </Typography>\r\n                <Typography className={classes.description} color=\"textSecondary\">\r\n                    {ChangeDescription(description)}\r\n                </Typography>\r\n                <Grid container>\r\n                    <Grid item lg={4}>\r\n                        <Typography className={classes.infoItems}>Barómetro: {pressure} hPa</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={4}>\r\n                        <Typography className={classes.infoItems}>Viento: {windSpeed}</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={4}>\r\n                        <Typography className={classes.infoItems}>Visibilidad: {visibility/1000}km</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item lg={4}>\r\n                        <Typography className={classes.infoItems}>Sensación térmica: {currentTemp}°C</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={4}>\r\n                        <Typography className={classes.infoItems}>Humedad: {humidity}%</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={4}>\r\n                        <Typography className={classes.infoItems}>Punto de roció: {dewPoint}°C</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PrincipalInfo;","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\principal-info\\principal-info-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\dashboard-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\letter-forecast\\letter-forecast.jsx",["96","97"],"import React from 'react';\r\nimport { Typography, Grid, Paper, Box } from '@material-ui/core';\r\n\r\n\r\n//styles\r\nimport letterForecastStyles from './letter-forecast-material-styles';\r\n\r\nconst LetterForecast = ({ weeklyForecast, timeZone }) => {\r\n\r\n    const classes = letterForecastStyles();\r\n\r\n    const ChangeDescription = (str) => {\r\n        return str.replace(str[0], str[0].toUpperCase());\r\n    };\r\n\r\n\r\n    const dateFormat = (index, timeZone) => {\r\n        const week = ['do', 'lu', 'ma', 'mi', 'ju', 'vi', 'sá'];\r\n        const currentDay = new Date().toLocaleDateString('en-GB', { timeZone: timeZone }); //Dia actual de la localizacion buscada.\r\n        const resultDay = new Date().setDate(parseInt(currentDay.slice(0, 2)) + (index + 1)); //Dia de la semana en milisegundos.\r\n\r\n        return week[new Date(resultDay).getUTCDay()] + \". \" + new Date(resultDay).getUTCDate().toString(); //Retorna el dia de la semana junto con su numero de fecha.\r\n    };\r\n\r\n    return (\r\n        <Grid container className={classes.root}>\r\n            {\r\n                weeklyForecast.slice(1, 7).map((day, index) => (\r\n                    <Grid item lg={1} key={index}>\r\n\r\n                        <Typography className={classes.date}>\r\n                            {dateFormat(index, timeZone)}\r\n                        </Typography>\r\n                        <Grid container className={classes.tempBox}>\r\n                            <Typography className={classes.tempMax}>\r\n                                {Math.round(day.temp.max)}°\r\n                                </Typography>\r\n                            <Typography className={classes.tempMin}>\r\n                                {Math.round(day.temp.min)}°\r\n                                </Typography>\r\n                        </Grid>\r\n                        <Typography className={classes.description}>\r\n                            {ChangeDescription(day.weather[0].description)}\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                ))\r\n            }\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default LetterForecast;","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\letter-forecast\\letter-forecast-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\daily-chart\\daily-chart.jsx",["98","99"],"import React from 'react';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport { Container } from '@material-ui/core';\r\n\r\nconst DailyChart = ({ hourlyForecast, timeZone }) => {\r\n\r\n    const getTemp = (arr) => {\r\n        let result = [];\r\n        arr.slice(1, 13).map((hour) => {\r\n            result.push(Math.round(hour.temp));\r\n        })\r\n        return result;\r\n\r\n    };\r\n\r\n    const getHour = (timeZone) => {\r\n        let currentHour;\r\n        let nextHour;\r\n        let result = [];\r\n\r\n        if (!timeZone) return alert('ya sabes');\r\n\r\n        currentHour = parseInt(new Date().toLocaleTimeString('en-GB', { timeZone: timeZone }).slice(0, 2));\r\n        for (let i = 0; i < 12; i++) {\r\n            nextHour = new Date().setHours(currentHour + (i + 1));\r\n            result.push(new Date(nextHour).getHours().toString() + ':00');\r\n        };\r\n        return result;\r\n    };\r\n\r\n    return (\r\n        <Container style={{ margin: '2rem', backgroundColor: 'rgba(0, 0, 0, .65)', borderRadius: 5, paddingTop: '1rem' }}>\r\n            <Line\r\n                data={{\r\n                    labels: getHour(timeZone),\r\n                    datasets: [{\r\n                        label: 'Por horas',\r\n                        data: getTemp(hourlyForecast),\r\n                        borderWidth: 3,\r\n                        backgroundColor: 'rgba( 46, 134, 193, .4)',\r\n                        borderColor: 'rgba( 46, 134, 193)',\r\n                        pointBackgroundColor: 'rgba( 46, 134, 193)',\r\n                        pointStyle: 'circle',\r\n                        radius: 4,\r\n                        lineTension: 0,\r\n                    }],\r\n                }}\r\n                height={160}\r\n                width={600}\r\n                options={{\r\n                    scales: {\r\n                        yAxes: [{\r\n                            gridLines: {\r\n                                display: false,\r\n                            },\r\n                            ticks: {\r\n                                fontColor: 'white',\r\n                                fontFamily: 'Red Hat Text, sans-serif',\r\n                                fontSize: 13,\r\n                                lineHeight: 4.3,\r\n                                padding: 12,\r\n                                callback: value => value + '°'\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            gridLines: {\r\n                                display: false,\r\n                            },\r\n                            ticks: {\r\n                                fontColor: 'white',\r\n                                fontFamily: 'Red Hat Text, sans-serif',\r\n                                fontSize: 13,\r\n                            }\r\n                        }],\r\n                    },\r\n                    legend: {\r\n                        labels: {\r\n                            fontColor: 'white',\r\n                            fontFamily: 'Red Hat Text, sans-serif',\r\n                            fontSize: 20\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DailyChart;\r\n","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\lateral-menu\\lateral-menu.jsx",["100"],"import React from 'react';\r\n\r\nimport { Drawer, Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\n\r\nimport lateralMenuStyles from './lateral-menu-marterial-styles';\r\n\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\nconst LateralMenu = () => {\r\n\r\n    const classes = lateralMenuStyles();\r\n\r\n    return (\r\n        <Drawer\r\n            className={classes.root}\r\n            variant='temporary'\r\n            classes={{\r\n                paper: classes.drawerPaper\r\n            }}\r\n            anchor='left'\r\n            open={false}\r\n        >\r\n            <ListItem className={classes.header}>\r\n                <ListItemIcon>\r\n                    <HomeIcon className={classes.icon}/>\r\n                </ListItemIcon>\r\n                <ListItemText className={classes.textOption}>\r\n                    Inicio\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <HomeIcon className={classes.icon}/>\r\n                </ListItemIcon>\r\n                <ListItemText className={classes.textOption}>\r\n                    Inicio\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <BookmarkIcon className={classes.icon}/>\r\n                </ListItemIcon>\r\n                <ListItemText className={classes.textOption}>\r\n                    Favoritos\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <MapIcon className={classes.icon}/>\r\n                </ListItemIcon>\r\n                <ListItemText className={classes.textOption}>\r\n                    Mapa\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <TimelineIcon className={classes.icon}/>\r\n                </ListItemIcon>\r\n                <ListItemText className={classes.textOption}>\r\n                    Historial\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <CodeIcon className={classes.icon}/>\r\n                </ListItemIcon>\r\n                <ListItemText className={classes.textOption}>\r\n                    Créditos\r\n                </ListItemText>\r\n            </ListItem>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default LateralMenu;","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\lateral-menu\\lateral-menu-marterial-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\app-material-styles.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":20,"column":8,"nodeType":"107","endLine":20,"endColumn":10,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":21},{"ruleId":"109","severity":1,"message":"113","line":2,"column":28,"nodeType":"111","messageId":"112","endLine":2,"endColumn":33},{"ruleId":"109","severity":1,"message":"114","line":2,"column":35,"nodeType":"111","messageId":"112","endLine":2,"endColumn":38},{"ruleId":"109","severity":1,"message":"115","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":9,"column":37,"nodeType":"118","messageId":"119","endLine":9,"endColumn":39},{"ruleId":"109","severity":1,"message":"120","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":31},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["123"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Box' is defined but never used.","'Bar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'List' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [dispatch]",{"range":"126","text":"127"},[727,729],"[dispatch]"]