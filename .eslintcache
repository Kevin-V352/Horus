[{"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\index.js":"1","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\App.js":"2","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\reportWebVitals.js":"3","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\header.jsx":"4","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\header-material-styles.js":"5","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\search-bar\\search-bar.jsx":"6","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\search-bar\\search-bar-material-styles.js":"7","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\dashboard.jsx":"8","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\actions-creators\\weather.js":"9","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\store\\store.js":"10","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\reducers\\wheater-reducer.js":"11","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\actions-types\\index.js":"12","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\principal-info\\principal-info.jsx":"13","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\principal-info\\principal-info-material-styles.js":"14","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\dashboard-material-styles.js":"15","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\letter-forecast\\letter-forecast.jsx":"16","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\letter-forecast\\letter-forecast-material-styles.js":"17","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\daily-chart\\daily-chart.jsx":"18","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\lateral-menu\\lateral-menu.jsx":"19","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\lateral-menu\\lateral-menu-marterial-styles.js":"20","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\map\\map.jsx":"21","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\map\\map-material-styles.js":"22","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\theme-config.js":"23","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\favorites-list\\favorite-list.jsx":"24","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\favorites-list\\card-location\\card-location.jsx":"25","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\favorites-list\\favorites-list-material-styles.js":"26","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\favorites-list\\card-location\\card-location-material-styles.js":"27","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-weather.jsx":"28","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-weather-chart\\historical-weather-chart.jsx":"29","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-weather-chart\\historical-weather-chart-material-styles.js":"30","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-weather-material-styles.js":"31","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-chart\\historical-chart.jsx":"32","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-chart\\historical-chart-material-styles.js":"33","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-date\\historical-date.jsx":"34","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-date\\historical-date-material-styles.js":"35"},{"size":692,"mtime":1608320915654,"results":"36","hashOfConfig":"37"},{"size":1590,"mtime":1608948546967,"results":"38","hashOfConfig":"37"},{"size":375,"mtime":1607391066659,"results":"39","hashOfConfig":"37"},{"size":1776,"mtime":1608582252465,"results":"40","hashOfConfig":"37"},{"size":1250,"mtime":1608581224625,"results":"41","hashOfConfig":"37"},{"size":4009,"mtime":1608943247897,"results":"42","hashOfConfig":"37"},{"size":1069,"mtime":1608672522994,"results":"43","hashOfConfig":"37"},{"size":829,"mtime":1609272181635,"results":"44","hashOfConfig":"37"},{"size":1320,"mtime":1608858788458,"results":"45","hashOfConfig":"37"},{"size":1001,"mtime":1609370046491,"results":"46","hashOfConfig":"37"},{"size":1231,"mtime":1608763201123,"results":"47","hashOfConfig":"37"},{"size":594,"mtime":1608762709295,"results":"48","hashOfConfig":"37"},{"size":5081,"mtime":1608939126058,"results":"49","hashOfConfig":"37"},{"size":1214,"mtime":1608848085593,"results":"50","hashOfConfig":"37"},{"size":410,"mtime":1608848109891,"results":"51","hashOfConfig":"37"},{"size":2667,"mtime":1609289690789,"results":"52","hashOfConfig":"37"},{"size":1291,"mtime":1609357446280,"results":"53","hashOfConfig":"37"},{"size":3392,"mtime":1609107074606,"results":"54","hashOfConfig":"37"},{"size":3579,"mtime":1609358642167,"results":"55","hashOfConfig":"37"},{"size":1122,"mtime":1608587526503,"results":"56","hashOfConfig":"37"},{"size":3197,"mtime":1609362970838,"results":"57","hashOfConfig":"37"},{"size":393,"mtime":1609363010974,"results":"58","hashOfConfig":"37"},{"size":377,"mtime":1608585031105,"results":"59","hashOfConfig":"37"},{"size":1184,"mtime":1609272388886,"results":"60","hashOfConfig":"37"},{"size":4561,"mtime":1609368387975,"results":"61","hashOfConfig":"37"},{"size":354,"mtime":1608762373143,"results":"62","hashOfConfig":"37"},{"size":1010,"mtime":1608944048476,"results":"63","hashOfConfig":"37"},{"size":5128,"mtime":1609361691218,"results":"64","hashOfConfig":"37"},{"size":1103,"mtime":1609350464750,"results":"65","hashOfConfig":"37"},{"size":407,"mtime":1609287478864,"results":"66","hashOfConfig":"37"},{"size":454,"mtime":1609272060640,"results":"67","hashOfConfig":"37"},{"size":2866,"mtime":1609268737262,"results":"68","hashOfConfig":"37"},{"size":461,"mtime":1609116222866,"results":"69","hashOfConfig":"37"},{"size":2462,"mtime":1609361996555,"results":"70","hashOfConfig":"37"},{"size":747,"mtime":1609362066528,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1sipddj",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\index.js",[],["147","148"],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\App.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\reportWebVitals.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\header.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\header-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\search-bar\\search-bar.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\search-bar\\search-bar-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\dashboard.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\actions-creators\\weather.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\store\\store.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\reducers\\wheater-reducer.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\redux\\actions-types\\index.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\principal-info\\principal-info.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\principal-info\\principal-info-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\dashboard-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\letter-forecast\\letter-forecast.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\letter-forecast\\letter-forecast-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\dashboard\\daily-chart\\daily-chart.jsx",["149"],"//<---React--->//\r\nimport React from 'react';\r\n\r\n//<--- Redux--->//\r\nimport { useSelector } from 'react-redux';\r\n\r\n//<---Chart--->//\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n//<---Material--->//\r\nimport { Container } from '@material-ui/core';\r\n\r\nconst DailyChart = () => {\r\n\r\n    const weather = useSelector((state) => state);\r\n    \r\n    const fontFamily = 'Red Hat Text, sans-serif';\r\n    const fontSize = 13;\r\n    const color = 'white';\r\n\r\n    const getTemp = arr => {\r\n        let result = [];\r\n        arr.slice(1, 13).map((hour) => {\r\n            result.push(Math.round(hour.temp));\r\n        });\r\n        return result;\r\n\r\n    };\r\n\r\n    const getHour = timeZone => {\r\n        let currentHour, nextHour;\r\n        let result = [];\r\n\r\n        if (!timeZone) return\r\n\r\n        currentHour = parseInt(new Date().toLocaleTimeString('en-GB', { timeZone: timeZone }).slice(0, 2));\r\n        for (let i = 0; i < 12; i++) {\r\n            nextHour = new Date().setHours(currentHour + (i + 1));\r\n            result.push(new Date(nextHour).getHours().toString() + ':00');\r\n        };\r\n        return result;\r\n    };\r\n\r\n    return (\r\n        <Container style={{ margin: '2rem', backgroundColor: 'rgba(0, 0, 0, .65)', borderRadius: 5, paddingTop: '1rem' }}>\r\n            <Line\r\n                data={{\r\n                    labels: getHour(weather.timeZone),\r\n                    datasets: [{\r\n                        label: 'Por horas',\r\n                        data: getTemp(weather.hourly),\r\n                        borderWidth: 3,\r\n                        backgroundColor: 'rgba( 46, 134, 193, .4)',\r\n                        borderColor: 'rgba( 46, 134, 193)',\r\n                        pointBackgroundColor: 'rgba( 46, 134, 193)',\r\n                        pointStyle: 'circle',\r\n                        radius: 4,\r\n                        lineTension: 0,\r\n                    }],\r\n                }}\r\n                height={160}\r\n                width={600}\r\n                options={{\r\n                    scales: {\r\n                        yAxes: [{\r\n                            gridLines: {\r\n                                display: false,\r\n                            },\r\n                            ticks: {\r\n                                fontColor: color,\r\n                                fontFamily: fontFamily,\r\n                                fontSize: fontSize,\r\n                                lineHeight: 4.3,\r\n                                padding: 12,\r\n                                callback: value => value + '°'\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            gridLines: {\r\n                                display: false,\r\n                            },\r\n                            ticks: {\r\n                                fontColor: color,\r\n                                fontFamily: fontFamily,\r\n                                fontSize: fontSize,\r\n                            }\r\n                        }],\r\n                    },\r\n                    legend: {\r\n                        labels: {\r\n                            fontColor: color,\r\n                            fontFamily: fontFamily,\r\n                            fontSize: 20\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DailyChart;\r\n","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\lateral-menu\\lateral-menu.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\header\\lateral-menu\\lateral-menu-marterial-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\map\\map.jsx",["150","151"],"//<---React--->//\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\n//<--- Redux--->//\r\nimport { useSelector } from 'react-redux';\r\n\r\n//<---Leaflet--->//\r\nimport { MapContainer, TileLayer, LayersControl } from 'react-leaflet';\r\n\r\n//styles\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n//<--- Material--->//\r\nimport { Box } from '@material-ui/core';\r\n\r\n//styles\r\nimport mapStyles from './map-material-styles';\r\n\r\nconst API_KEY = process.env.REACT_APP_OPEN_WEATHER_API_KEY;\r\n\r\n/* const MapFocused = () => {\r\n    const map = useMap(() => {\r\n        map.setView(['40.4167047', '-3.7035825']);\r\n    }); \r\n    return null\r\n}; */\r\n\r\nconst Map = () => {\r\n    const classes = mapStyles();\r\n\r\n    const weather = useSelector((state) => state);\r\n    const [coordinates, setCoordinates] = useState([]);\r\n\r\n    const handlerUpdate = () => {\r\n        setCoordinates({\r\n            lat: weather.coordinates[0],\r\n            lon: weather.coordinates[1]\r\n        })\r\n        console.log('SOY LA FUNCION', coordinates)\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('EL USEE', weather.coordinates)\r\n        handlerUpdate()\r\n\r\n    },[weather.coordinates]);\r\n\r\n    if(!coordinates.lat) return ( <div>hola</div>)\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <MapContainer center={[coordinates.lat, coordinates.lon]} zoom={11} scrollWheelZoom={false} style={{ height: '75vh', width: '90%', border: '3px black solid' }}>\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <LayersControl position='topright'>\r\n                    <LayersControl.Overlay name='Precipitación'>\r\n                        <TileLayer\r\n                            url={`https://tile.openweathermap.org/map/precipitation_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n                        />\r\n                    </LayersControl.Overlay>\r\n                    <LayersControl.Overlay name='Nubes'>\r\n                        <TileLayer\r\n                            url={`https://tile.openweathermap.org/map/clouds_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n                        />\r\n                    </LayersControl.Overlay>\r\n                    <LayersControl.Overlay name='Nivel de presion'>\r\n                        <TileLayer\r\n                            url={`https://tile.openweathermap.org/map/pressure_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n                        />\r\n                    </LayersControl.Overlay>\r\n                    <LayersControl.Overlay name='Velocidad del viento'>\r\n                        <TileLayer\r\n                            url={`https://tile.openweathermap.org/map/wind_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n                        />\r\n                    </LayersControl.Overlay>\r\n                    <LayersControl.Overlay name='Temperatura'>\r\n                        <TileLayer\r\n                            url={`https://tile.openweathermap.org/map/temp_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n                        />\r\n                    </LayersControl.Overlay>\r\n                </LayersControl>\r\n            </MapContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Map;","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\map\\map-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\theme-config.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\favorites-list\\favorite-list.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\favorites-list\\card-location\\card-location.jsx",["152"],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\favorites-list\\favorites-list-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\favorites-list\\card-location\\card-location-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-weather.jsx",["153"],"//<---React--->//\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n//<--- Redux--->//\r\nimport { useSelector } from 'react-redux';\r\n\r\n//<--- Axios--->//\r\nimport axios from 'axios';\r\n\r\n//<--- Material--->//\r\nimport {\r\n    Box,\r\n    Grid\r\n} from '@material-ui/core';\r\n\r\n//styles\r\nimport historicalWeatherStyles from './historical-weather-material-styles';\r\n\r\n//----Components----//\r\nimport HistoricalWeatherChart from './historical-weather-chart/historical-weather-chart';\r\nimport HistoricalChart from './historical-chart/historical-chart';\r\nimport HistoricalDate from './historical-date/historical-date';\r\n\r\n//<--- API-Key--->//\r\nconst API_KEY = process.env.REACT_APP_OPEN_WEATHER_API_KEY;\r\n\r\nconst HistoricalData = () => {\r\n\r\n    const classes = historicalWeatherStyles();\r\n\r\n    const weather = useSelector((state) => state);\r\n\r\n    const [pastDays, setPastDays] = useState([]);\r\n    const [historyArr, setHistoryArr] = useState({});\r\n    const [currentIndex, setCurrentIndex] = useState(4);\r\n    const [date, setDate] = useState({\r\n        date: '',\r\n        maxTemp: '',\r\n        minTemp: ''\r\n    });\r\n\r\n    const handlerPastDays = timeZone => {\r\n\r\n        const currentDay = new Date().toLocaleDateString('en-GB', { timeZone: timeZone });\r\n        let resultDay, dayUNIX;\r\n        let historicalArr = [];\r\n        for (let i = 1; i < 6; i++) {\r\n            resultDay = new Date().setDate(parseInt(currentDay.slice(0, 2)) - i);\r\n            /* console.log(Math.floor(new Date(resultDay).getTime() / 1000)) */\r\n            /* console.log(resultDay.toString().slice(0, resultDay.toString().length - 3)) */\r\n            dayUNIX = Math.floor(new Date(resultDay).getTime() / 1000);\r\n            historicalArr.unshift(dayUNIX);\r\n        };\r\n        return historicalArr;\r\n    };\r\n\r\n    const dateFormat = (index, timeZone, long) => {\r\n        const week = ['do', 'lu', 'ma', 'mi', 'ju', 'vi', 'sá'];\r\n        const currentDay = new Date().toLocaleDateString('en-GB', { timeZone: timeZone }); //Dia actual de la localizacion buscada.\r\n        const resultDay = new Date().setDate(parseInt(currentDay.slice(0, 2)) - ((long + 1) - (index + 1))); //Dia de la semana en milisegundos.\r\n\r\n        return week[new Date(resultDay).getUTCDay()] + \". \" + new Date(resultDay).getDate().toString(); //Retorna el dia de la semana junto con su numero de fecha.\r\n    };\r\n\r\n    const setHistoricalChart = dayUNIX => {\r\n        const [lat, lon] = weather.coordinates;\r\n        const historicalTemp = [];\r\n        const historicalHours = [];\r\n        axios.get(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${dayUNIX}&appid=${API_KEY}&lang=es&units=metric`)\r\n            .then(day => {\r\n                day.data.hourly.map(hour => historicalTemp.push(Math.round(hour.temp)));\r\n                setCurrentDate(dayUNIX, historicalTemp);\r\n                for (let i = 0; i < 24; i++) {\r\n                    historicalHours.push(`${i}:00`);\r\n                };\r\n                setHistoryArr({\r\n                    historicalTemp,\r\n                    historicalHours\r\n                });\r\n            })\r\n            .catch(error => console.log(`Error en la peticion: ${error}`))\r\n    };\r\n\r\n    const setCurrentDate = (dayUNIX, historicalTemp) => {\r\n        const maxTemp = Math.max(...historicalTemp);\r\n        const minTemp = Math.min(...historicalTemp);\r\n        const selector = new Date(dayUNIX * 1000);\r\n        const week = ['Domingo','Lunes','Martes','Miércoles','Jueves','Viernes','Sábado'];\r\n        const months = ['spaceIndex', 'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\r\n        const dayName = week[selector.getDay()];\r\n        const date = selector.toLocaleDateString().split('/');\r\n        const [day, month, year] = date;\r\n        setDate({\r\n            date: `${dayName}, ${day} de ${months[month]} de ${year}`,\r\n            maxTemp,\r\n            minTemp\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPastDays(handlerPastDays(weather.timeZone))\r\n    }, [weather]);\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Grid container className={classes.cardContainer}>\r\n                {\r\n                    pastDays.map((pastDay, index) => (\r\n                        <Grid item xs={2} key={index}>\r\n                            <HistoricalWeatherChart\r\n                                dayUNIX={pastDay}\r\n                                date={dateFormat(index, weather.timeZone, pastDays.length)}\r\n                                setHistoricalChart={setHistoricalChart}\r\n                                index={index}\r\n                                currentIndex={currentIndex}\r\n                            />\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n            <HistoricalDate\r\n                nameLocation={weather.nameLocation}\r\n                date={date}\r\n            />\r\n            <HistoricalChart\r\n                data={historyArr}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default HistoricalData;","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-weather-chart\\historical-weather-chart.jsx",["154","155","156","157","158"],"//<---React--->//\r\nimport React, { useEffect, useState, useRef } from 'react';\r\n\r\n//<--- Material--->//\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardActionArea,\r\n    Typography,\r\n    IconButton,\r\n    Grid,\r\n} from '@material-ui/core';\r\n\r\n//styles\r\nimport historicalChartStyles from './historical-weather-chart-material-styles';\r\n\r\nconst HistoricalWeatherChart = ({ dayUNIX, date, setHistoricalChart, index, currentIndex }) => {\r\n\r\n    const classes = historicalChartStyles();\r\n\r\n    const card = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (index === currentIndex) card.current.click();\r\n    }, [dayUNIX]);\r\n\r\n    return (\r\n        <Card ref={card} className={classes.root} onClick={() => setHistoricalChart(dayUNIX)}>\r\n            <CardActionArea>\r\n                <CardContent className={classes.content}>\r\n                    <Typography>\r\n                        {date}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HistoricalWeatherChart;","C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-weather-chart\\historical-weather-chart-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-weather-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-chart\\historical-chart.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-chart\\historical-chart-material-styles.js",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-date\\historical-date.jsx",[],"C:\\Users\\KV\\Estudios\\Proyectos personales\\Horus\\src\\components\\body\\historical-weather\\historical-date\\historical-date-material-styles.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":23,"column":37,"nodeType":"165","messageId":"166","endLine":23,"endColumn":39},{"ruleId":"167","severity":1,"message":"168","line":2,"column":38,"nodeType":"169","messageId":"170","endLine":2,"endColumn":44},{"ruleId":"171","severity":1,"message":"172","line":46,"column":7,"nodeType":"173","endLine":46,"endColumn":28,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"175","line":68,"column":8,"nodeType":"173","endLine":68,"endColumn":10,"suggestions":"176"},{"ruleId":"167","severity":1,"message":"177","line":35,"column":26,"nodeType":"169","messageId":"170","endLine":35,"endColumn":41},{"ruleId":"167","severity":1,"message":"178","line":2,"column":28,"nodeType":"169","messageId":"170","endLine":2,"endColumn":36},{"ruleId":"167","severity":1,"message":"179","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":16},{"ruleId":"167","severity":1,"message":"180","line":11,"column":5,"nodeType":"169","messageId":"170","endLine":11,"endColumn":15},{"ruleId":"167","severity":1,"message":"181","line":12,"column":5,"nodeType":"169","messageId":"170","endLine":12,"endColumn":9},{"ruleId":"171","severity":1,"message":"182","line":26,"column":8,"nodeType":"173","endLine":26,"endColumn":17,"suggestions":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlerUpdate'. Either include it or remove the dependency array.","ArrayExpression",["186"],"React Hook useEffect has missing dependencies: 'lat' and 'lon'. Either include them or remove the dependency array.",["187"],"'setCurrentIndex' is assigned a value but never used.","'useState' is defined but never used.","'Skeleton' is defined but never used.","'IconButton' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'currentIndex' and 'index'. Either include them or remove the dependency array.",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [handlerUpdate, weather.coordinates]",{"range":"195","text":"196"},"Update the dependencies array to be: [lat, lon]",{"range":"197","text":"198"},"Update the dependencies array to be: [currentIndex, dayUNIX, index]",{"range":"199","text":"200"},[1128,1149],"[handlerUpdate, weather.coordinates]",[1887,1889],"[lat, lon]",[656,665],"[currentIndex, dayUNIX, index]"]